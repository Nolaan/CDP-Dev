// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Modifier un Issue', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Modifier un Issue', async function() {
    await driver.get("http://localhost:4200/project/5deee0a4ff8d4749888b2b6f")
    await driver.manage().window().setRect(1347, 748)
    await driver.findElement(By.css(".cdk-focused .mat-icon")).click()
    await driver.executeScript("window.scrollTo(0,0)")
    await driver.findElement(By.id("mat-input-4")).sendKeys("En tant que testeur je veux tester mon appli et je modifie aussi")
    await driver.findElement(By.id("mat-input-4")).sendKeys("En tant que testeur je veux tester mon appli et je modifie aussi")
    {
      const element = await driver.findElement(By.css("#mat-select-5 .mat-select-value"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css("#mat-select-5 .mat-select-value"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css("#mat-select-5 .mat-select-value"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("#mat-select-5 .mat-select-value")).click()
    {
      const element = await driver.findElement(By.css("#mat-option-13 > .mat-option-text"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css("#mat-option-13 > .mat-option-text"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css("#mat-option-13 > .mat-option-text"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("#mat-option-13 > .mat-option-text")).click()
    {
      const element = await driver.findElement(By.css(".ng-tns-c5-37 .mat-form-field-infix"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-tns-c5-37 .mat-form-field-infix"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-tns-c5-37 .mat-form-field-infix"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".ng-tns-c5-37 .mat-form-field-infix")).click()
    await driver.findElement(By.id("mat-input-5")).sendKeys("4")
    await driver.findElement(By.id("mat-input-5")).sendKeys("4")
    {
      const element = await driver.findElement(By.css(".mr-1 > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".mr-1 > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".mr-1 > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".mr-1 > .mat-button-wrapper")).click()
    {
      const element = await driver.findElement(By.css(".box:nth-child(2)"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".box:nth-child(2)"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".box:nth-child(2)"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".box:nth-child(2)")).click()
  })
})
