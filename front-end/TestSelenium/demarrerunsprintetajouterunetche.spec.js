// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Demarrer un sprint et ajouter une t창che', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Demarrer un sprint et ajouter une t창che', async function() {
    await driver.get("http://localhost:4200/project/5deee0a4ff8d4749888b2b6f")
    await driver.manage().window().setRect(1347, 748)
    {
      const element = await driver.findElement(By.css(".mat-action-row > .mat-warn > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css(".mat-accent"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.css(".mat-accent .mat-icon")).click()
    await driver.executeScript("window.scrollTo(0,0)")
    await driver.findElement(By.css(".mat-raised-button > .mat-button-wrapper")).click()
    await driver.findElement(By.id("mat-input-4")).sendKeys("Il faudra ... ajouter une t창che pour le tester ")
    await driver.findElement(By.id("mat-input-4")).sendKeys("Il faudra ... ajouter une t창che pour le tester ")
    {
      const element = await driver.findElement(By.css(".mat-select-value > .ng-tns-c13-33"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".mat-select-value > .ng-tns-c13-33"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".mat-select-value > .ng-tns-c13-33"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".mat-select-value > .ng-tns-c13-33")).click()
    {
      const element = await driver.findElement(By.css("#mat-option-10 > .mat-option-text"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css("#mat-option-10 > .mat-option-text"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css("#mat-option-10 > .mat-option-text"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("#mat-option-10 > .mat-option-text")).click()
    {
      const element = await driver.findElement(By.css(".cdk-overlay-transparent-backdrop"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-overlay-transparent-backdrop"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-overlay-transparent-backdrop"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".cdk-overlay-transparent-backdrop")).click()
    {
      const element = await driver.findElement(By.css(".mat-select-placeholder"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".mat-select-placeholder"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".mat-select-placeholder"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".mat-select-placeholder")).click()
    {
      const element = await driver.findElement(By.css(".ng-tns-c5-36 .mat-datepicker-toggle-default-icon"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused .mat-datepicker-toggle-default-icon"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused .mat-datepicker-toggle-default-icon"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused .mat-datepicker-toggle-default-icon"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".cdk-focused .mat-datepicker-toggle-default-icon")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-star-inserted:nth-child(5) > .mat-calendar-body-cell:nth-child(2) > .mat-calendar-body-cell-content"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-star-inserted:nth-child(5) > .mat-calendar-body-cell:nth-child(2) > .mat-calendar-body-cell-content"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-star-inserted:nth-child(5) > .mat-calendar-body-cell:nth-child(2) > .mat-calendar-body-cell-content"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".ng-star-inserted:nth-child(5) > .mat-calendar-body-cell:nth-child(2) > .mat-calendar-body-cell-content")).click()
    {
      const element = await driver.findElement(By.css(".ng-tns-c5-37 path"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused .mat-datepicker-toggle-default-icon"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused .mat-datepicker-toggle-default-icon"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused .mat-datepicker-toggle-default-icon"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".cdk-focused .mat-datepicker-toggle-default-icon")).click()
    {
      const element = await driver.findElement(By.css(".cdk-focused .mat-datepicker-toggle-default-icon"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-star-inserted:nth-child(5) > .mat-calendar-body-cell:nth-child(5) > .mat-calendar-body-cell-content"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-star-inserted:nth-child(5) > .mat-calendar-body-cell:nth-child(5) > .mat-calendar-body-cell-content"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-star-inserted:nth-child(5) > .mat-calendar-body-cell:nth-child(5) > .mat-calendar-body-cell-content"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".ng-star-inserted:nth-child(5) > .mat-calendar-body-cell:nth-child(5) > .mat-calendar-body-cell-content")).click()
    {
      const element = await driver.findElement(By.css(".cdk-focused > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".cdk-focused > .mat-button-wrapper")).click()
    {
      const element = await driver.findElement(By.css(".element-row:nth-child(3) > .cdk-column-ID-Issue"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".element-row:nth-child(3) > .cdk-column-ID-Issue"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".element-row:nth-child(3) > .cdk-column-ID-Issue"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".element-row:nth-child(3) > .cdk-column-ID-Issue")).click()
    {
      const element = await driver.findElement(By.css(".mat-raised-button:nth-child(3) > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".cdk-focused > .mat-button-wrapper")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.id("mat-input-7")).sendKeys("Il faudra ... un autre t창che avec dependance ")
    await driver.findElement(By.id("mat-input-7")).sendKeys("Il faudra ... un autre t창che avec dependance ")
    {
      const element = await driver.findElement(By.css(".mat-select-value > .ng-tns-c13-44"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".mat-select-value > .ng-tns-c13-44"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".mat-select-value > .ng-tns-c13-44"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".mat-select-value > .ng-tns-c13-44")).click()
    {
      const element = await driver.findElement(By.css("#mat-option-13 > .mat-option-text"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css("#mat-option-13 > .mat-option-text"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css("#mat-option-13 > .mat-option-text"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("#mat-option-13 > .mat-option-text")).click()
    {
      const element = await driver.findElement(By.css(".cdk-overlay-transparent-backdrop"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-overlay-transparent-backdrop"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-overlay-transparent-backdrop"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".cdk-overlay-transparent-backdrop")).click()
    {
      const element = await driver.findElement(By.css(".mat-select-placeholder"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".mat-select-placeholder"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".mat-select-placeholder"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".mat-select-placeholder")).click()
    {
      const element = await driver.findElement(By.css(".mat-option-text"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".mat-option-text"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".mat-option-text"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".mat-option-text")).click()
    {
      const element = await driver.findElement(By.css(".cdk-overlay-transparent-backdrop"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-overlay-transparent-backdrop"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-overlay-transparent-backdrop"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".cdk-overlay-transparent-backdrop")).click()
    {
      const element = await driver.findElement(By.css(".ng-tns-c5-47 path"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused path"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused path"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused path"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".cdk-focused path")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-star-inserted:nth-child(5) > .mat-calendar-body-cell:nth-child(1) > .mat-calendar-body-cell-content"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-star-inserted:nth-child(5) > .mat-calendar-body-cell:nth-child(1) > .mat-calendar-body-cell-content"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-star-inserted:nth-child(5) > .mat-calendar-body-cell:nth-child(1) > .mat-calendar-body-cell-content"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".ng-star-inserted:nth-child(5) > .mat-calendar-body-cell:nth-child(1) > .mat-calendar-body-cell-content")).click()
    {
      const element = await driver.findElement(By.css(".ng-tns-c5-48 path"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused path"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused path"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused path"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".cdk-focused path")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-star-inserted:nth-child(6) > .mat-calendar-body-cell:nth-child(2) > .mat-calendar-body-cell-content"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-star-inserted:nth-child(6) > .mat-calendar-body-cell:nth-child(2) > .mat-calendar-body-cell-content"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".ng-star-inserted:nth-child(6) > .mat-calendar-body-cell:nth-child(2) > .mat-calendar-body-cell-content"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".ng-star-inserted:nth-child(6) > .mat-calendar-body-cell:nth-child(2) > .mat-calendar-body-cell-content")).click()
    {
      const element = await driver.findElement(By.css(".cdk-focused > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".cdk-focused > .mat-button-wrapper"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".cdk-focused > .mat-button-wrapper")).click()
  })
})
